# def cis_angle(struct_arr):
#     from htmd.vmdviewer import viewer
#     import re
#     vmd = viewer(dispdev='none')
#     tmp_file = "/tmp/vmd_tmp.txt"
#     script = "cispeptide list  "
#     vmd.send("source /shared/pablo/PHN_VMD_scripts/stdout.tcl")
#     open(tmp_file, 'w').close()
#     vmd.send("stdout off " + tmp_file)
#     all_results = []
#     for idx, mol in enumerate(struct_arr):
#         open(tmp_file, 'w').close()
#         frame_cis = []
#         for frame in range(mol.numFrames+1):
#             mol.frame = frame
#             vmd.loadMol(mol)
#             vmd.send("cispeptide check -mol "+ str(idx))
#             with open(tmp_file, 'r') as result_file:
#                 keep = -1
#                 cis = []
#                 for line in result_file.readlines():
#                     line = [ i for i in re.split(" |}|{|,|\.|$|:|\)|\(", line) if i !="" ]
#                     if (line[0]=="cispeptide" and line[1] =="Found"):
#                         cis_angle = []
#                         keep = 2
#                     elif (line[0] == 'residue' and keep>0):
#                         cis_angle.append(int(line[3]))
#                         keep -= 1
#                     if keep == 0:
#                         cis.append(cis_angle)
#                         keep = -1
#                 frame_cis.append(cis)
#             vmd.send("mol delete 0")
#         all_results.append(frame_cis)
#     vmd.close()
#     return all_results

def cis_angle(mol):
    import numpy as np
    from htmd.ui import Dihedral, MetricDihedral
    dih = np.array(Dihedral.proteinDihedrals(mol, dih=('omega')))
    met = MetricDihedral(dih, sincos=False)
    return np.array(met.project(mol))

if __name__ == '__main__':
    mol = Molecule('')